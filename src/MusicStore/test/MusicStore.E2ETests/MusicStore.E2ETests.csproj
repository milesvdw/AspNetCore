<Project Sdk="Microsoft.NET.Sdk">

  <PropertyGroup>
    <TargetFramework>netcoreapp3.0</TargetFramework>
    <UserSecretsId>MusicStore.E2ETests</UserSecretsId>
    <TestGroupName>MusicStore.E2ETests</TestGroupName>
    <TreatWarningsAsErrors>true</TreatWarningsAsErrors>
    <ServerGarbageCollection>true</ServerGarbageCollection>
    <WarningsNotAsErrors>$(WarningsNotAsErrors);xUnit1004</WarningsNotAsErrors>
    <!-- Temporarily suppress warnings about Microsoft.AspNetCore.Server.IntegrationTesting -->
    <NoWarn>$(NoWarn);NU1605</NoWarn>
    <!-- https://github.com/aspnet/AspNetCore/issues/6549 -->
    <BuildHelixPayload>false</BuildHelixPayload>
  </PropertyGroup>

  <ItemGroup>
    <None Include="*.config" CopyToOutputDirectory="PreserveNewest" />
    <None Include="remoteDeploymentConfig.json" CopyToOutputDirectory="PreserveNewest" />
  </ItemGroup>

  <ItemGroup>
    <Reference Include="Microsoft.AspNetCore.Authentication.Cookies" />
    <Reference Include="Microsoft.AspNetCore.Authentication.OpenIdConnect" />
    <Reference Include="Microsoft.AspNetCore.Identity" />
    <ProjectReference Include="$(RepositoryRoot)src\Servers\IIS\IntegrationTesting.IIS\src\Microsoft.AspNetCore.Server.IntegrationTesting.IIS.csproj" />
    <Reference Include="Microsoft.AspNetCore.WebUtilities" />
    <Reference Include="Microsoft.Extensions.CommandLineUtils.Sources" />
    <Reference Include="Microsoft.Extensions.Configuration.Binder" />
    <Reference Include="Microsoft.Extensions.Configuration.EnvironmentVariables" />
    <Reference Include="Microsoft.Extensions.Configuration.Json" />
    <Reference Include="Microsoft.Extensions.Configuration.UserSecrets" />
    <Reference Include="Microsoft.Extensions.Logging.Console" />
    <Reference Include="Microsoft.Extensions.Logging" />
    <Reference Include="Microsoft.Extensions.Logging.Abstractions" />
    <Reference Include="Microsoft.Extensions.Logging.Testing" />
    <Reference Include="System.Data.SqlClient" />
  </ItemGroup>

  <Target Name="_RunPublishAssets" BeforeTargets="AfterBuild" DependsOnTargets="PublishAssets" Condition="'$(SkipTests)' != 'true' OR '$(BuildHelixPayload)' != 'false'" />

  <Target Name="PublishAssets">
    <ItemGroup>
      <Architecture Include="x64" />
      <Architecture Include="x86" Condition="$([MSBuild]::IsOSPlatform('Windows'))" />
      <ApplicationType Include="Portable;Standalone" Architecture="%(Architecture.Identity)" />

      <PublishAsset
        Include="..\..\samples\MusicStore\MusicStore.csproj"
        Architecture="%(ApplicationType.Architecture)"
        ApplicationType="%(ApplicationType.Identity)"
        PublishDirectory="$(MSBuildThisFileDirectory)$(OutputPath)testassets\%(ApplicationType.Identity)\%(ApplicationType.Architecture)\" />
    </ItemGroup>

    <MSBuild
      Projects="$(MSBuildProjectFullPath)"
      Targets="_PublishAsset"
      Properties="PublishProject=%(PublishAsset.Identity);Architecture=%(Architecture);ApplicationType=%(ApplicationType);PublishDirectory=%(PublishDirectory)"
      BuildInParallel="false" />
  </Target>

  <Target Name="_PublishAsset">

    <PropertyGroup>
      <PublishCommandOptions>PublishDir=$(PublishDirectory);Configuration=$(Configuration);TargetArchitecture=$(Architecture)</PublishCommandOptions>

      <PublishCommandOptions Condition="'$(ApplicationType)' == 'Standalone'">$(PublishCommandOptions);RuntimeIdentifier=$(TargetOSName)-$(Architecture)</PublishCommandOptions>

      <!-- Workaround for https://github.com/aspnet/websdk/issues/422 -->
      <PublishCommandOptions Condition="'$(ApplicationType)' == 'Portable'">$(PublishCommandOptions);UseAppHost=false;</PublishCommandOptions>
    </PropertyGroup>

    <MSBuild Projects="$(PublishProject)" Targets="Restore;Publish" Properties="$(PublishCommandOptions)" />
  </Target>

</Project>
